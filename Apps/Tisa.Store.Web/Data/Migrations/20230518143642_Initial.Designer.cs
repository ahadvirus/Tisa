// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tisa.Store.Web.Data.Contexts;

#nullable disable

namespace Tisa.Store.Web.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230518143642_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Tisa.Store.Web.Models.Entities.Attribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("Tisa.Store.Web.Models.Entities.AttributeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AttributeId")
                        .HasColumnType("int");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntityId");

                    b.HasIndex("Id");

                    b.HasIndex("AttributeId", "EntityId")
                        .IsUnique();

                    b.ToTable("AttributeEntities");
                });

            modelBuilder.Entity("Tisa.Store.Web.Models.Entities.AttributeEntityValidator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AttributeEntityId")
                        .HasColumnType("int");

                    b.Property<int>("ValidatorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttributeEntityId");

                    b.HasIndex("ValidatorId");

                    b.ToTable("AttributeEntityValidators");
                });

            modelBuilder.Entity("Tisa.Store.Web.Models.Entities.AttributeEntityValidatorClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AttributeEntityValidationId")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("AttributeEntityValidationId", "Key")
                        .IsUnique();

                    b.ToTable("AttributeEntityValidatorClaims");
                });

            modelBuilder.Entity("Tisa.Store.Web.Models.Entities.Entity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Entities");
                });

            modelBuilder.Entity("Tisa.Store.Web.Models.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AttributeEntityId")
                        .HasColumnType("int");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<int>("Group")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AttributeEntityId");

                    b.HasIndex("EntityId", "AttributeEntityId", "Group")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Tisa.Store.Web.Models.Entities.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Types");
                });

            modelBuilder.Entity("Tisa.Store.Web.Models.Entities.TypeValidator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("ValidatorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ValidatorId");

                    b.HasIndex("TypeId", "ValidatorId")
                        .IsUnique();

                    b.ToTable("TypeValidators");
                });

            modelBuilder.Entity("Tisa.Store.Web.Models.Entities.TypeValidatorClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("TypeValidatorId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("TypeValidatorId");

                    b.HasIndex("Key", "TypeValidatorId")
                        .IsUnique();

                    b.ToTable("TypeValidatorClaims");
                });

            modelBuilder.Entity("Tisa.Store.Web.Models.Entities.Validator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Validators");
                });

            modelBuilder.Entity("Tisa.Store.Web.Models.Entities.ValidatorClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ValidatorId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ValidatorId");

                    b.HasIndex("Key", "ValidatorId")
                        .IsUnique();

                    b.ToTable("ValidatorClaims");
                });

            modelBuilder.Entity("Tisa.Store.Web.Models.Entities.Attribute", b =>
                {
                    b.HasOne("Tisa.Store.Web.Models.Entities.Type", "Type")
                        .WithMany("Attributes")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Tisa.Store.Web.Models.Entities.AttributeEntity", b =>
                {
                    b.HasOne("Tisa.Store.Web.Models.Entities.Attribute", "Attribute")
                        .WithMany("Entites")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tisa.Store.Web.Models.Entities.Entity", "Entity")
                        .WithMany("Attributes")
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Tisa.Store.Web.Models.Entities.AttributeEntityValidator", b =>
                {
                    b.HasOne("Tisa.Store.Web.Models.Entities.AttributeEntity", "AttributeEntity")
                        .WithMany("Validators")
                        .HasForeignKey("AttributeEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tisa.Store.Web.Models.Entities.Validator", "Validator")
                        .WithMany("Attributes")
                        .HasForeignKey("ValidatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttributeEntity");

                    b.Navigation("Validator");
                });

            modelBuilder.Entity("Tisa.Store.Web.Models.Entities.AttributeEntityValidatorClaim", b =>
                {
                    b.HasOne("Tisa.Store.Web.Models.Entities.AttributeEntityValidator", "AttributeEntityValidation")
                        .WithMany("Claims")
                        .HasForeignKey("AttributeEntityValidationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttributeEntityValidation");
                });

            modelBuilder.Entity("Tisa.Store.Web.Models.Entities.Product", b =>
                {
                    b.HasOne("Tisa.Store.Web.Models.Entities.AttributeEntity", "AttributeEntity")
                        .WithMany("Values")
                        .HasForeignKey("AttributeEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tisa.Store.Web.Models.Entities.Entity", "Entity")
                        .WithMany("Products")
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttributeEntity");

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("Tisa.Store.Web.Models.Entities.TypeValidator", b =>
                {
                    b.HasOne("Tisa.Store.Web.Models.Entities.Type", "Type")
                        .WithMany("Validators")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tisa.Store.Web.Models.Entities.Validator", "Validator")
                        .WithMany("Types")
                        .HasForeignKey("ValidatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");

                    b.Navigation("Validator");
                });

            modelBuilder.Entity("Tisa.Store.Web.Models.Entities.TypeValidatorClaim", b =>
                {
                    b.HasOne("Tisa.Store.Web.Models.Entities.TypeValidator", "TypeValidator")
                        .WithMany("Claims")
                        .HasForeignKey("TypeValidatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeValidator");
                });

            modelBuilder.Entity("Tisa.Store.Web.Models.Entities.ValidatorClaim", b =>
                {
                    b.HasOne("Tisa.Store.Web.Models.Entities.Validator", "Validator")
                        .WithMany("Claims")
                        .HasForeignKey("ValidatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Validator");
                });

            modelBuilder.Entity("Tisa.Store.Web.Models.Entities.Attribute", b =>
                {
                    b.Navigation("Entites");
                });

            modelBuilder.Entity("Tisa.Store.Web.Models.Entities.AttributeEntity", b =>
                {
                    b.Navigation("Validators");

                    b.Navigation("Values");
                });

            modelBuilder.Entity("Tisa.Store.Web.Models.Entities.AttributeEntityValidator", b =>
                {
                    b.Navigation("Claims");
                });

            modelBuilder.Entity("Tisa.Store.Web.Models.Entities.Entity", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Tisa.Store.Web.Models.Entities.Type", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Validators");
                });

            modelBuilder.Entity("Tisa.Store.Web.Models.Entities.TypeValidator", b =>
                {
                    b.Navigation("Claims");
                });

            modelBuilder.Entity("Tisa.Store.Web.Models.Entities.Validator", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Claims");

                    b.Navigation("Types");
                });
#pragma warning restore 612, 618
        }
    }
}
